version: '3.7'

services:

  zookeeper:
    image: tap:kafka
    container_name: kafkaZK
    environment:
      - KAFKA_ACTION=start-zk
    networks: 
      tap:
        ipv4_address: 10.0.100.22

  kafkaserver:
    image: tap:kafka
    container_name: kafkaServer
    environment:
      - KAFKA_ACTION=start-kafka
      #- KAFKA_HEAP_OPTS=-Xmx256M
    ports:
      - 9092:9092
    networks: 
      tap:
        ipv4_address: 10.0.100.23
    depends_on:
      - zookeeper
    
  

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafkaWebUI
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafkaServer:9092
    ports: 
      - 8080:8080
    networks: 
      - tap
    depends_on:
      - kafkaserver


  kafkaTopic:
    image: tap:kafka
    container_name: kafkaTopic
    environment:
        - KAFKA_ACTION=create-topic
        - KAFKA_PARTITION=3
        - KAFKA_TOPIC=musicFlux
    networks: 
        tap:
    depends_on:
        - zookeeper
        - kafkaserver


  logstash:
    image: tap:logstash   
    networks: 
      - tap
    environment:
      - XPACK_MONITORING_ENABLED=false
      - KAFKA_OUTPUT_BOOTSTRAP_SERVERS=kafkaserver:9092
      - KAFKA_OUTPUT_TOPIC=musicFlux
    volumes:
      - ./data_ingestion/logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf

    depends_on:
          kafkaTopic:
              condition: service_completed_successfully
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    ports:
      - "5002:5002"
    
  
  kafkaConsumer:
    image: tap:kafka
    container_name: kafkaConsumer
    environment:
        - KAFKA_ACTION=consumer
        - KAFKA_TOPIC=musicFlux
        - KAFKA_GROUP_ID=0
    networks: 
        tap:
    depends_on:
        kafkaTopic:
            condition: service_completed_successfully
  

  coreradio_script:
    build: 
      context: ./data_ingestion/scrapers/coreradio_scraper
      dockerfile: Dockerfile
    networks:
      - tap
    volumes:
      - ./data_ingestion/scrapers/coreradio_scraper:/app
    depends_on:
      - logstash
    command: python3 /app/coreradio_scraper.py --output tcp://logstash:5002

networks:
  tap:
    name: tap
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.100.1/24
